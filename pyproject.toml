[tool.poetry]
authors = ["Chaichontat Sriworarat <csriwor1@jh.edu>"]
description = ""
license = "MIT"
name = "fishtools"
packages = [{include = "fishtools"}]
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
click = "^8.1.6"
expression = "^4.2.4"
glymur = "^0.12.8"
imagecodecs = "^2023.7.10"
numpy = "^1.25.1"
polars = "^0.18.9"
python = "^3.10"
rich-click = "^1.6.1"
tifffile = "^2023.7.18"
tqdm = "^4.65.0"

[tool.poetry.scripts]
fishtools = "fishtools.cli:main"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.3.3"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.black]
line-length = 110
target-version = ['py310']

[tool.pyright]
include = ["fishtools"]
pythonVersion = "3.10"
reportMissingTypeStubs = false
reportPrivateUsage = false
reportPropertyTypeMismatch = false
reportUnknownArgumentType = false
reportUnknownLambdaType = false
reportUnknownMemberType = false
reportUnknownVariableType = false
reportUntypedFunctionDecorator = false
reportUnusedImport = false
reportUnusedVariable = "warning"
typeCheckingMode = "strict"

[tool.ruff]
ignore = ["E501"]
line-length = 110

[tool.isort]
line_length = 110
profile = "black"
py_version = 310
src_paths = ["fishtools"]

[tool.pytest.ini_options]
addopts = "--cov=fishtools --cov-report=html --cov-report=xml"
log_cli = 1
# log_cli_level = "DEBUG"
minversion = "7.0"
testpaths = ["test"]

[tool.bandit]
exclude = "test"
skips = ["B101", "B404", "B603", "B607"]
targets = "fishtools"

[tool.codespell]
skip = 'scripts/'
